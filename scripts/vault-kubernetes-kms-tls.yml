apiVersion: v1
kind: Pod
metadata:
  name: vault-kubernetes-kms
  namespace: kube-system
  labels:
    app: vault-kubernetes-kms
spec:
  priorityClassName: system-node-critical
  hostNetwork: true
  containers:
    - name: vault-kubernetes-kms
      image: localhost:5000/vault-kubernetes-kms:latest
      imagePullPolicy: IfNotPresent
      command:
        - /vault-kubernetes-kms
        - -vault-address=http://172.17.0.1:8200
        - -vault-ca-cert=/var/run/secrets/kubernetes.io/kubelet-ca
        - -auth-method=tls
        - -tls-role=kms
		    - -tls-cert=/var/run/secrets/kubernetes.io/kubelet/kubelet.crt
		    - -tls-key=/var/run/secrets/kubernetes.io/kubelet/kubelet.key
      volumeMounts:
        # mount /opt/kms host directory
        - name: kms
          mountPath: /opt/kms
        - name: kubelet-cert
          mountPath: /var/run/secrets/kubernetes.io/kubelet
          readOnly: true
        - name: kubelet-ca
          mountPath: /var/run/secrets/kubernetes.io/kubelet-ca
          readOnly: true
      livenessProbe:
      httpGet:
          path: /health
          port: 8080
      readinessProbe:
        httpGet:
          path: /live
          port: 8080
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          cpu: 2
          memory: 1Gi
  volumes:
    # mount /opt/kms host directory
    - name: kms
      hostPath:
        path: /opt/kms
    - name: kubelet-cert
      hostPath:
        path: /var/lib/kubelet/pki
        type: DirectoryOrCreate
    - name: kubelet-ca
      hostPath:
        path: /etc/kubernetes/pki/ca.crt
        type: File
